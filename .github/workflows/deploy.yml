name: Deploy Supabase Edge Function

on:
  push:
    branches: [ main ]     # change if needed
  workflow_dispatch: {}    # lets you run it by hand

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Read from Secrets first; fall back to Variables if you used those
    env:
      PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_ID || vars.SUPABASE_PROJECT_ID || secrets.SUPABASE_PROJECT_REF || vars.SUPABASE_PROJECT_REF }}
      ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN || vars.SUPABASE_ACCESS_TOKEN }}
      SB_URL: ${{ secrets.SUPABASE_URL || vars.SUPABASE_URL || secrets.SUPABASE_FUNCTION_URL || vars.SUPABASE_FUNCTION_URL }}
      SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || vars.SUPABASE_SERVICE_ROLE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # Ensure clean config (avoids old api_url/db_url keys)
      - name: Write clean supabase/config.toml
        run: |
          mkdir -p supabase
          cat > supabase/config.toml <<EOF
          project_id = "${PROJECT_REF}"
          EOF

      - name: Validate required inputs
        run: |
          set -e
          [ -n "$PROJECT_REF" ] || { echo "::error::PROJECT_REF missing"; exit 1; }
          [ -n "$ACCESS_TOKEN" ] || { echo "::error::SUPABASE_ACCESS_TOKEN missing"; exit 1; }
          echo "Using project: $PROJECT_REF"

      # Optional: set function secrets from GitHub (skip if you manage in dashboard)
      - name: Set Function Secrets (optional)
        if: ${{ env.SB_URL != '' && env.SERVICE_ROLE != '' }}
        run: |
          supabase secrets set \
            SUPABASE_URL="$SB_URL" \
            SUPABASE_SERVICE_ROLE_KEY="$SERVICE_ROLE" \
            --project-ref "$PROJECT_REF"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}

      - name: Deploy Edge Function
        run: supabase functions deploy dynamic-task --project-ref "$PROJECT_REF" --workdir supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}